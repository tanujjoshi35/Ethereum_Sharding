load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "discovery.go",
        "feed.go",
        "message.go",
        "options.go",
        "peer.go",
        "service.go",
        "topics.go",
    ],
    importpath = "github.com/prysmaticlabs/prysm/shared/p2p",
    visibility = ["//visibility:public"],
    deps = [
        "//proto/sharding/v1:go_default_library",
        "@com_github_ethereum_go_ethereum//event:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_libp2p_go_floodsub//:go_default_library",
        "@com_github_libp2p_go_libp2p//:go_default_library",
        "@com_github_libp2p_go_libp2p//p2p/discovery:go_default_library",
        "@com_github_libp2p_go_libp2p_crypto//:go_default_library",
        "@com_github_libp2p_go_libp2p_host//:go_default_library",
        "@com_github_libp2p_go_libp2p_peer//:go_default_library",
        "@com_github_libp2p_go_libp2p_peerstore//:go_default_library",
        "@com_github_multiformats_go_multiaddr//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "discovery_test.go",
        "feed_example_test.go",
        "feed_test.go",
        "options_test.go",
        "service_test.go",
        "topics_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//proto/sharding/v1:go_default_library",
        "//shared:go_default_library",
        "@com_github_ethereum_go_ethereum//event:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_libp2p_go_floodsub//:go_default_library",
        "@com_github_libp2p_go_libp2p//p2p/discovery:go_default_library",
        "@com_github_libp2p_go_libp2p//p2p/host/basic:go_default_library",
        "@com_github_libp2p_go_libp2p_peer//:go_default_library",
        "@com_github_libp2p_go_libp2p_swarm//testing:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_sirupsen_logrus//hooks/test:go_default_library",
    ],
)

# by default gazelle tries to add all the test files to the  first
# go_test; we want to treat feed_concurrent_test.go differently
# gazelle:exclude feed_concurrent_test.go

go_test(
    name = "go_feed_concurrent_write_test",
    srcs = ["feed_concurrent_test.go"],
    embed = [":go_default_library"],
    race = "on",
)
